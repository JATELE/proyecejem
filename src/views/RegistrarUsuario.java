/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package views;

import conexion.Conexion;
import controllers.ControllerCliente;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import models.Cliente;
import static views.Dashboard.dashboard_menu;


/**
 *
 * @author user
 */
public class RegistrarUsuario extends javax.swing.JInternalFrame {
     public int idEntrenadorGlobal = 0;
      public int idMembresiaGlobal = 0;
   Conexion enlace = new Conexion();
   Connection conet = enlace.conectar();
    public RegistrarUsuario() {
        initComponents();
         this.setTitle("Agregar Cliente");
         this.setLocation(150, 100);
          mostrarDatosCliente(0,null);
         cargarTodasLasMembresias();
         cargarTodasLosEntrenadores();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menuContextual = new javax.swing.JPopupMenu();
        opActualizar = new javax.swing.JMenuItem();
        opEliminar = new javax.swing.JMenuItem();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtDNI = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtnombre = new javax.swing.JTextField();
        txtapellido = new javax.swing.JTextField();
        txtTel = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtdireccion = new javax.swing.JTextField();
        txtnacimiento = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaClientes = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        comboOpcion = new javax.swing.JComboBox<>();
        campoBuscar = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        btnActualizar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        cb_mem = new javax.swing.JComboBox<>();
        cb_categoria1 = new javax.swing.JComboBox<>();

        opActualizar.setText("Actualizar");
        opActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opActualizarActionPerformed(evt);
            }
        });
        menuContextual.add(opActualizar);

        opEliminar.setText("Eliminar");
        opEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opEliminarActionPerformed(evt);
            }
        });
        menuContextual.add(opEliminar);

        setClosable(true);
        setPreferredSize(new java.awt.Dimension(1152, 694));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        jLabel1.setText("Registrar Cliente Nuevo");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 30, -1, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("DNI :");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 90, -1, -1));

        txtDNI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDNIActionPerformed(evt);
            }
        });
        getContentPane().add(txtDNI, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 90, 150, -1));

        jLabel3.setText("Nombre :");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 140, -1, -1));

        jLabel4.setText("Apellido :");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 190, -1, -1));

        jLabel5.setText("Tel :");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 260, -1, -1));

        jLabel6.setText("Email");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 310, -1, -1));

        jLabel7.setText("Direccion :");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 370, -1, -1));

        jLabel8.setText("F_Nacimiento");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 430, -1, -1));

        jLabel9.setText("Entrenador :");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 490, -1, -1));

        txtnombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnombreActionPerformed(evt);
            }
        });
        getContentPane().add(txtnombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 140, 150, -1));

        txtapellido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtapellidoActionPerformed(evt);
            }
        });
        getContentPane().add(txtapellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 190, 150, -1));
        getContentPane().add(txtTel, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 250, 150, -1));
        getContentPane().add(txtEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 310, 150, -1));

        txtdireccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtdireccionActionPerformed(evt);
            }
        });
        getContentPane().add(txtdireccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 370, 150, -1));
        getContentPane().add(txtnacimiento, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 430, 140, -1));

        jButton1.setText("Guardar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 570, -1, -1));
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 40, -1, -1));
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 330, -1, -1));

        tablaClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tablaClientes.setComponentPopupMenu(menuContextual);
        jScrollPane1.setViewportView(tablaClientes);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 130, 770, 320));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Buscar por"));

        comboOpcion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mostrar todos ", "Identificacion", "Apellido" }));
        comboOpcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboOpcionActionPerformed(evt);
            }
        });

        campoBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoBuscarActionPerformed(evt);
            }
        });

        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-buscar-16.png"))); // NOI18N
        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(comboOpcion, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(campoBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(254, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboOpcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 13, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 70, 770, -1));
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 250, -1, -1));

        btnActualizar.setText("Actualizar datos");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });
        getContentPane().add(btnActualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 470, -1, -1));

        btnEliminar.setText("Eliminar Datos");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        getContentPane().add(btnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 470, 110, -1));

        jLabel13.setText("Membresia :");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 530, -1, -1));
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 630, -1, -1));

        cb_mem.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione la Membresia", " ", " " }));
        cb_mem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_memActionPerformed(evt);
            }
        });
        getContentPane().add(cb_mem, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 530, 150, -1));

        cb_categoria1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione al Entrenador", " " }));
        cb_categoria1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_categoria1ActionPerformed(evt);
            }
        });
        getContentPane().add(cb_categoria1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 490, 150, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtapellidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtapellidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtapellidoActionPerformed

    private void txtdireccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtdireccionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtdireccionActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        ControllerCliente controlClienteP = new ControllerCliente(); 
    Cliente clienteP = new Cliente(); 
        // Validamos que ningún campo esté vacío antes de continuar
        // Asignamos los valores a la clase Cliente
        clienteP.setDni_c(Integer.parseInt(txtDNI.getText().trim()));
        clienteP.setNombre(txtnombre.getText().trim());
        clienteP.setApellido(txtapellido.getText().trim());
        clienteP.setTelefono(txtTel.getText().trim());
        clienteP.setEmail(txtEmail.getText().trim());
        clienteP.setDireccio(txtdireccion.getText().trim());
        clienteP.setFecha_nacimiento((txtnacimiento.getText().trim()));
       this.metodoIDEntrenador();
        clienteP.setDni_e(idEntrenadorGlobal);
        this.metodoIDMembresia();
         clienteP.setId_membresia(idMembresiaGlobal);

        // Intentamos guardar el clien
        if (controlClienteP.guardarCliente(clienteP)) {
            JOptionPane.showMessageDialog(null, "¡Registro correcto!");
        } else {
            JOptionPane.showMessageDialog(null, "¡Error al guardar!", "Error", JOptionPane.ERROR_MESSAGE);
        }
    
               DefaultTableModel tcliente = new DefaultTableModel(
           new String[]{"dni_c", "nombre", "apellido", "telefono", "email", "direccion", "fecha_nacimiento", "dni_E","membresia"}, 0
       );
       tablaClientes.setModel(tcliente);
         if (conet == null) {
           JOptionPane.showMessageDialog(null, "Error en la conexión con la base de datos");
           return;
       }

       String[] datos = new String[9];

       try {
           Statement leer = conet.createStatement();
           ResultSet resultado = leer.executeQuery("SELECT * FROM cliente");

           while (resultado.next()) {
               datos[0] = resultado.getString(1);
               datos[1] = resultado.getString(2);
               datos[2] = resultado.getString(3);
               datos[3] = resultado.getString(4);
               datos[4] = resultado.getString(5);
               datos[5] = resultado.getString(6);
               datos[6] = resultado.getString(7);
               datos[7] = resultado.getString(8);
                datos[8] = resultado.getString(9);
               tcliente.addRow(datos);
           }

           tablaClientes.setModel(tcliente);
       } catch (SQLException e) {
           JOptionPane.showMessageDialog(null, "Error en la consulta: " + e.getMessage());
       }
        
    }//GEN-LAST:event_jButton1ActionPerformed
   
     public void metodoIDEntrenador(){
        //Llamamos a la conexion
        Connection cn = Conexion.conectar();
        String sql = "select dni_e from entrenador "
                + "where nombre = '"+cb_categoria1.getSelectedItem()+"'";
        Statement st;
        try{
             //Ejecutamos el Statement (sentencia)
            st = cn.createStatement();
            //"Conjuto de resultado" Obtenemos los datos de la BD;
            ResultSet rs = st.executeQuery(sql);
            while(rs.next()){  
                idEntrenadorGlobal = rs.getInt("dni_e");
            }
        }catch(SQLException e){
            System.out.println("Error al llamar sus ID del Entrenador"+e);
        }
     }
        public void cargarTodasLosEntrenadores(){
        //Llamamos a la conexion
        Connection cn = Conexion.conectar();
        String sql = "select * from entrenador";
        Statement st;
        try{
            //Ejecutamos el Statement (sentencia)
            st = cn.createStatement();
            //"Conjuto de resultado" Obtenemos los datos de la BD;
            ResultSet rs = st.executeQuery(sql);
            cb_categoria1.removeAllItems(); //Elimina todos los item creados anteriormente
            cb_categoria1.addItem("Seleccione un entrenador"); //agrego un nuevo item
            //El bucle busca la siguiente fila del ResultSet mientras haya datos
            while(rs.next()){  
                //Almaceno en mi combo box categoria, todos los datos de la tabla categoria
                // pongo "descripcion" porque asi esta el atributo en mi tabla tb_categoria
                cb_categoria1.addItem(rs.getString("nombre"));
            }
        }catch(SQLException e){
            System.out.println("Error al cargar entrenador"+e);
        }
    }
 public void metodoIDMembresia(){
        //Llamamos a la conexion
        Connection cn = Conexion.conectar();
        String sql = "select id_membresia from membresia where tipo_membresia  = '"+cb_mem.getSelectedItem()+"'";
        Statement st;
        try{
             //Ejecutamos el Statement (sentencia)
            st = cn.createStatement();
            //"Conjuto de resultado" Obtenemos los datos de la BD;
            ResultSet rs = st.executeQuery(sql);
            while(rs.next()){  
                idMembresiaGlobal = rs.getInt("id_membresia");
            }
        }catch(SQLException e){
            System.out.println("Error al llamar sus ID de la membresia"+e);
        }
     }
        public void cargarTodasLasMembresias(){
        //Llamamos a la conexion
        Connection cn = Conexion.conectar();
        String sql = "select * from membresia";
        Statement st;
        try{
            //Ejecutamos el Statement (sentencia)
            st = cn.createStatement();
            //"Conjuto de resultado" Obtenemos los datos de la BD;
            ResultSet rs = st.executeQuery(sql);
            cb_mem.removeAllItems(); //Elimina todos los item creados anteriormente
            cb_mem.addItem("Seleccione una Membresia"); //agrego un nuevo item
            //El bucle busca la siguiente fila del ResultSet mientras haya datos
            while(rs.next()){  
                //Almaceno en mi combo box categoria, todos los datos de la tabla categoria
                // pongo "descripcion" porque asi esta el atributo en mi tabla tb_categoria
                cb_mem.addItem(rs.getString("tipo_membresia"));
            }
        }catch(SQLException e){
            System.out.println("Error al cargar Membresia"+e);
        }
    }
    
    private void txtDNIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDNIActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDNIActionPerformed

    private void txtnombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnombreActionPerformed

    private void comboOpcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboOpcionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboOpcionActionPerformed

    private void campoBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoBuscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoBuscarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed

        int opcion  = comboOpcion.getSelectedIndex();
        String valorbuscado  = campoBuscar.getText();
        mostrarDatosCliente(opcion,valorbuscado);
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
 
        actualizardatos();
        
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
    
  EliminarCliente();
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void opActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opActualizarActionPerformed
     
        actualizardatos();
        
    }//GEN-LAST:event_opActualizarActionPerformed

    private void opEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opEliminarActionPerformed
          EliminarCliente();
    }//GEN-LAST:event_opEliminarActionPerformed

    private void cb_memActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_memActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cb_memActionPerformed

    private void cb_categoria1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_categoria1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cb_categoria1ActionPerformed

      public void mostrarDatosCliente(int opbuscar, String valor){

       DefaultTableModel tcliente = new DefaultTableModel(
           new String[]{"dni_c", "nombre", "apellido", "telefono", "email", "direccion", "fecha_nacimiento", "dni_E","membresia"}, 0
       );
       tablaClientes.setModel(tcliente);
       
       String codsql;
        if (opbuscar == 0 &&  valor == null ){
         codsql  =  "SELECT " +
"    c.dni_c, " +
"    c.nombre, " +
"    c.apellido, " +
"    c.telefono, " +
"    c.email, " +
"    c.direccion, " +
"    c.fecha_nacimiento, " +
"    c.dni_e,    " +
"    m.tipo_membresia AS Membresia " +
"FROM cliente c  " +
"JOIN membresia m ON c.id_membresia = m.id_membresia;";
        }else {
           if (opbuscar == 1 && valor != null){
           codsql = "select * from cliente where dni_c = '"+valor+"'" ;
           }else {
           if (opbuscar == 2 && valor != null){
           codsql = "select * from cliente where apellido = '"+valor+"'" ;
           } else {
               codsql  = "SELECT " +
"    c.dni_c, " +
"    c.nombre, " +
"    c.apellido, " +
"    c.telefono, " +
"    c.email, " +
"    c.direccion, " +
"    c.fecha_nacimiento, " +
"    c.dni_e,   " +
"    m.tipo_membresia AS Membresia " +
"FROM cliente c  " +
"JOIN membresia m ON c.id_membresia = m.id_membresia;";
           }
           }
        }

       if (conet == null) {
           JOptionPane.showMessageDialog(null, "Error en la conexión con la base de datos");
           return;
       }

       String[] datos = new String[9];

       try {
           Statement leer = conet.createStatement();
           ResultSet resultado = leer.executeQuery(codsql);

           while (resultado.next()) {
               datos[0] = resultado.getString(1);
               datos[1] = resultado.getString(2);
               datos[2] = resultado.getString(3);
               datos[3] = resultado.getString(4);
               datos[4] = resultado.getString(5);
               datos[5] = resultado.getString(6);
               datos[6] = resultado.getString(7);
               datos[7] = resultado.getString(8);
                datos[8] = resultado.getString(9);
               tcliente.addRow(datos);
           }

           tablaClientes.setModel(tcliente);
       } catch (SQLException e) {
           JOptionPane.showMessageDialog(null, "Error en la consulta: " + e.getMessage());
       }}
     
    public void actualizardatos(){
    
    int  fila  = tablaClientes.getSelectedRow();
    
      if (fila < -1) {
        JOptionPane.showMessageDialog(null, "Seleccione un cliente para actualizar.");
        return;
    }
    
    int id  = Integer.parseInt(this.tablaClientes.getValueAt(fila, 0).toString());
    String nom = tablaClientes.getValueAt(fila, 1).toString();
      String ape = tablaClientes.getValueAt(fila, 2).toString();
        String tel = tablaClientes.getValueAt(fila, 3).toString();
          String ema = tablaClientes.getValueAt(fila, 4).toString();
            String dir = tablaClientes.getValueAt(fila, 5).toString();
              String fec = tablaClientes.getValueAt(fila, 6).toString();
     
               
        try { 
             PreparedStatement actu  = conet.prepareStatement("update cliente set nombre = '"+nom+"', apellido  = '"+ape+"',  telefono = '"+tel+"', email ='"+ema+"',  direccion ='"+dir+"', fecha_nacimiento ='"+fec+"' where dni_c = '"+id+"'  ");
             actu.executeUpdate();
            mostrarDatosCliente(0, null);
               
               } catch (Exception e){
               }

    }
    public void EliminarCliente(){
      int fila = tablaClientes.getSelectedRow();
      String valor = tablaClientes.getValueAt(fila, 0).toString();
      
        try {
            PreparedStatement elimi = conet.prepareStatement("delete from cliente where dni_c = '"+valor+"'");
                    elimi.executeUpdate();
                    mostrarDatosCliente(0, null);
        } catch (Exception e) {
        }
    }
           
        

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JTextField campoBuscar;
    private javax.swing.JComboBox<String> cb_categoria1;
    private javax.swing.JComboBox<String> cb_mem;
    private javax.swing.JComboBox<String> comboOpcion;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu menuContextual;
    private javax.swing.JMenuItem opActualizar;
    private javax.swing.JMenuItem opEliminar;
    private javax.swing.JTable tablaClientes;
    private javax.swing.JTextField txtDNI;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtTel;
    private javax.swing.JTextField txtapellido;
    private javax.swing.JTextField txtdireccion;
    private javax.swing.JTextField txtnacimiento;
    private javax.swing.JTextField txtnombre;
    // End of variables declaration//GEN-END:variables
}
