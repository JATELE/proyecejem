/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package views;

import conexion.Conexion;
import controllers.ControllerCategoriaP;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import models.CategoriaProducto;

/**
 *
 * @author SENATI
 */
public class SubFormCategoriaProducto extends javax.swing.JInternalFrame {
  Conexion enlace = new Conexion();
   Connection conet = enlace.conectar();
    public SubFormCategoriaProducto() {
        initComponents();
        this.setTitle("Categoria Producto");
         this.setLocation(500, 100);   
           mostrarCategorias();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menuContextual4 = new javax.swing.JPopupMenu();
        opActualizar4 = new javax.swing.JMenuItem();
        opEliminar = new javax.swing.JMenuItem();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtCategoriaProducto = new javax.swing.JTextField();
        btnEnviarCategoriaP = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaCategoria = new javax.swing.JTable();

        opActualizar4.setText("Actualizar");
        opActualizar4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opActualizar4ActionPerformed(evt);
            }
        });
        menuContextual4.add(opActualizar4);

        opEliminar.setText("Eliminar");
        opEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opEliminarActionPerformed(evt);
            }
        });
        menuContextual4.add(opEliminar);

        setClosable(true);
        setIconifiable(true);
        setResizable(true);
        setMinimumSize(new java.awt.Dimension(500, 486));
        setPreferredSize(new java.awt.Dimension(500, 486));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Nueva Categoria Producto");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 20, -1, -1));

        jLabel2.setText("Descripción:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 60, -1, -1));

        txtCategoriaProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCategoriaProductoActionPerformed(evt);
            }
        });
        getContentPane().add(txtCategoriaProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 60, 106, 31));

        btnEnviarCategoriaP.setText("Enviar");
        btnEnviarCategoriaP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnviarCategoriaPActionPerformed(evt);
            }
        });
        getContentPane().add(btnEnviarCategoriaP, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 110, -1, -1));

        TablaCategoria.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        TablaCategoria.setComponentPopupMenu(menuContextual4);
        jScrollPane1.setViewportView(TablaCategoria);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, -1, 267));

        pack();
    }// </editor-fold>//GEN-END:initComponents
   public void mostrarCategorias() {
    DefaultTableModel tcategoria = new DefaultTableModel(
        new String[]{"id_categoria", "nombre_categoria"}, 0
    );
    TablaCategoria.setModel(tcategoria);

    if (conet == null) {
        JOptionPane.showMessageDialog(null, "Error en la conexión con la base de datos");
        return;
    }

    String[] datos = new String[2];

    try {
        Statement leer = conet.createStatement();
        ResultSet resultado = leer.executeQuery("SELECT * FROM categoria");

        while (resultado.next()) {
            datos[0] = resultado.getString("id_categoria");
            datos[1] = resultado.getString("nombre_categoria");


            // Agregar datos al modelo de la tabla
            tcategoria.addRow(datos);
        }

        // Asignar el modelo corregido a la tabla
        TablaCategoria.setModel(tcategoria);
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error en la consulta: " + e.getMessage());
    }
    }
    private void btnEnviarCategoriaPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnviarCategoriaPActionPerformed
        // Instanciamos la clase ControllerUsuario y CategoriaProducto
        ControllerCategoriaP controlCategoriaP = new ControllerCategoriaP(); //Controllers/ControllerCaterogiaP
        CategoriaProducto categoriaP = new CategoriaProducto(); // models/CategoriaProducto
        //Guardarmos dentro de nuestro variable descripcion -> models/CategoriaProducto
        categoriaP.setNombre_categoria(txtCategoriaProducto.getText().trim());
        //Hacemos una condicional si los datos son correctos
        // Si el dato enviado al metodo guardarCategoria es correcto entonces que me salga REGISTRO EXITOSO
        if (controlCategoriaP.guardarCategoria(categoriaP)) {
            JOptionPane.showMessageDialog(null, "¡Registro correcto!");
        } else {
            JOptionPane.showMessageDialog(null, "¡Error al guardar!");
        }
          DefaultTableModel tcategoria = new DefaultTableModel(
        new String[]{"id_categoria", "nombre_categoria"}, 0
    );
    TablaCategoria.setModel(tcategoria);

    if (conet == null) {
        JOptionPane.showMessageDialog(null, "Error en la conexión con la base de datos");
        return;
    }

    String[] datos = new String[2];

    try {
        Statement leer = conet.createStatement();
        ResultSet resultado = leer.executeQuery("SELECT * FROM categoria");

        while (resultado.next()) {
            datos[0] = resultado.getString("id_categoria");
            datos[1] = resultado.getString("nombre_categoria");


            // Agregar datos al modelo de la tabla
            tcategoria.addRow(datos);
        }

        // Asignar el modelo corregido a la tabla
        TablaCategoria.setModel(tcategoria);
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error en la consulta: " + e.getMessage());
    }
    }//GEN-LAST:event_btnEnviarCategoriaPActionPerformed
 public void actualizardatos(){
    
    int  fila  = TablaCategoria.getSelectedRow();
    
      if (fila < -1) {
        JOptionPane.showMessageDialog(null, "Seleccione un cliente para actualizar.");
        return;
    }
    
    int id  = Integer.parseInt(this.TablaCategoria.getValueAt(fila, 0).toString());
    String nom = TablaCategoria.getValueAt(fila, 1).toString();

     
               
        try { 
             PreparedStatement actu  = conet.prepareStatement("update categoria set nombre_categoria = '"+nom+"' where id_categoria = '"+id+"'  ");
             actu.executeUpdate();
            mostrarCategorias();
               
               } catch (Exception e){
               }

    }
    public void EliminarCliente(){
      int fila = TablaCategoria.getSelectedRow();
      String valor = TablaCategoria.getValueAt(fila, 0).toString();
      
        try {
            PreparedStatement elimi = conet.prepareStatement("delete from categoria where id_categoria = '"+valor+"'");
                    elimi.executeUpdate();
                    mostrarCategorias();
        } catch (Exception e) {
        }
    }
    private void txtCategoriaProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCategoriaProductoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCategoriaProductoActionPerformed

    private void opActualizar4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opActualizar4ActionPerformed

        actualizardatos();
    }//GEN-LAST:event_opActualizar4ActionPerformed

    private void opEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opEliminarActionPerformed
        EliminarCliente();
    }//GEN-LAST:event_opEliminarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TablaCategoria;
    private javax.swing.JButton btnEnviarCategoriaP;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu menuContextual;
    private javax.swing.JPopupMenu menuContextual1;
    private javax.swing.JPopupMenu menuContextual2;
    private javax.swing.JPopupMenu menuContextual3;
    private javax.swing.JPopupMenu menuContextual4;
    private javax.swing.JMenuItem opActualizar;
    private javax.swing.JMenuItem opActualizar1;
    private javax.swing.JMenuItem opActualizar2;
    private javax.swing.JMenuItem opActualizar3;
    private javax.swing.JMenuItem opActualizar4;
    private javax.swing.JMenuItem opEliminar;
    private javax.swing.JTextField txtCategoriaProducto;
    // End of variables declaration//GEN-END:variables
}
