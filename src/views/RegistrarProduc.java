/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package views;

import conexion.Conexion;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import controllers.ControllerProducto;
import models.ProductoR;

public class RegistrarProduc extends javax.swing.JInternalFrame {
     public int idCategoriaGlobal = 0;
      public String idRucGlobal ;
   Conexion enlace = new Conexion();
   Connection conet = enlace.conectar();
    public RegistrarProduc() {
        initComponents();
          this.setLocation(300, 10);   
          mostrarDatosProductor(0,null);
         cargarTodasLasCategorias();
         cargarTodosLosProveedores();
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menuContextual = new javax.swing.JPopupMenu();
        opActualizar = new javax.swing.JMenuItem();
        opEliminar = new javax.swing.JMenuItem();
        jLabel12 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtDescripcion = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtPrecio = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtCantidad = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtStock = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaProducto = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        comboOpcion = new javax.swing.JComboBox<>();
        campoBuscar = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        cb_Prove = new javax.swing.JComboBox<>();
        cb_categoria1 = new javax.swing.JComboBox<>();

        opActualizar.setText("Actualizar");
        opActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opActualizarActionPerformed(evt);
            }
        });
        menuContextual.add(opActualizar);

        opEliminar.setText("Eliminar");
        opEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opEliminarActionPerformed(evt);
            }
        });
        menuContextual.add(opEliminar);

        setClosable(true);
        setResizable(true);
        setPreferredSize(new java.awt.Dimension(1024, 779));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel12.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        jLabel12.setText("Registrar Producto");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 10, -1, -1));

        jLabel2.setText("Descripcion");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, -1, -1));

        txtDescripcion.setBackground(new java.awt.Color(255, 255, 255));
        txtDescripcion.setForeground(new java.awt.Color(0, 0, 0));
        getContentPane().add(txtDescripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, 150, -1));

        jLabel3.setText("Precio");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 50, -1, -1));

        txtPrecio.setBackground(new java.awt.Color(255, 255, 255));
        txtPrecio.setForeground(new java.awt.Color(0, 0, 0));
        getContentPane().add(txtPrecio, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 80, 150, -1));

        jLabel4.setText("Cantidad ");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 50, -1, -1));

        txtCantidad.setBackground(new java.awt.Color(255, 255, 255));
        txtCantidad.setForeground(new java.awt.Color(0, 0, 0));
        getContentPane().add(txtCantidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 80, 150, -1));

        jLabel5.setText("Stock minimo");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 50, -1, -1));

        txtStock.setBackground(new java.awt.Color(255, 255, 255));
        txtStock.setForeground(new java.awt.Color(0, 0, 0));
        getContentPane().add(txtStock, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 80, 150, -1));

        jLabel6.setText("Categoria");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 50, -1, -1));

        jLabel7.setText("Proveedor");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 50, -1, -1));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-disk-96.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, 100, -1));

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-actualizar-96.png"))); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 120, -1, -1));

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-eliminar-96.png"))); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 120, -1, -1));

        jLabel20.setText("Guardar Producto");
        getContentPane().add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 230, -1, -1));

        jLabel21.setText("Eliminar");
        getContentPane().add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 230, -1, -1));

        jLabel22.setText("Actualizar");
        getContentPane().add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 230, -1, -1));

        jLabel1.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        jLabel1.setText("Productos Registrados");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 250, -1, -1));

        tablaProducto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tablaProducto.setComponentPopupMenu(menuContextual);
        tablaProducto.setName(""); // NOI18N
        tablaProducto.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                tablaProductoAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane1.setViewportView(tablaProducto);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 350, 950, 340));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Buscar por"));

        comboOpcion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mostrar Todos", "codigo de producto", "precio menor a ", "precio mayor a" }));
        comboOpcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboOpcionActionPerformed(evt);
            }
        });

        campoBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoBuscarActionPerformed(evt);
            }
        });

        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-buscar-16.png"))); // NOI18N
        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        jButton2.setText("Actualizar datos");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Eliminar datos");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(comboOpcion, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(campoBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton3)
                .addGap(0, 225, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(comboOpcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(campoBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnBuscar)
                        .addComponent(jButton2))
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 280, 950, 80));

        cb_Prove.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione el Proveedor" }));
        cb_Prove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_ProveActionPerformed(evt);
            }
        });
        getContentPane().add(cb_Prove, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 80, 150, -1));

        cb_categoria1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione Categoria" }));
        cb_categoria1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_categoria1ActionPerformed(evt);
            }
        });
        getContentPane().add(cb_categoria1, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 80, 150, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        ControllerProducto controlProducto = new ControllerProducto();
        ProductoR ProductoP = new ProductoR();
        // Validamos que ningún campo esté vacío antes de continuar
        // Asignamos los valores a la clase Cliente
        ProductoP.setDescripcion(txtDescripcion.getText().trim());
        ProductoP.setPrecio(Double.parseDouble(txtPrecio.getText()));
        ProductoP.setNumero_de_existencia(Integer.parseInt(txtCantidad.getText().trim()));
        ProductoP.setStock_minimo(Integer.parseInt(txtStock.getText().trim()));
        this.metodoIDCategoria();
        ProductoP.setId_categoria(idCategoriaGlobal);
        this.metodoIDRuc();
        ProductoP.setRuc(idRucGlobal); // Formato YYYY-MM-DD

        // Intentamos guardar el cliente
        if (controlProducto.guardarProducto(ProductoP)) {
            JOptionPane.showMessageDialog(null, "¡Registro correcto!");
        } else {
            JOptionPane.showMessageDialog(null, "¡Error al guardar!", "Error", JOptionPane.ERROR_MESSAGE);
        }
        DefaultTableModel produc= new DefaultTableModel(
            new String[]{"codigo_producto", "descripcion", "precio", "numero_de_existencia", "stock_minimo", "id_categoria", "ruc", }, 0
        );
        tablaProducto.setModel(produc);
        if (conet == null) {
            JOptionPane.showMessageDialog(null, "Error en la conexión con la base de datos");
            return;
        }

        String[] datos = new String[7];

        try {
            Statement leer = conet.createStatement();
            ResultSet resultado = leer.executeQuery("SELECT * FROM producto");

            while (resultado.next()) {
                datos[0] = resultado.getString(1);
                datos[1] = resultado.getString(2);
                datos[2] = resultado.getString(3);
                datos[3] = resultado.getString(4);
                datos[4] = resultado.getString(5);
                datos[5] = resultado.getString(6);
                datos[6] = resultado.getString(7);
                produc.addRow(datos);
            }

            tablaProducto.setModel(produc);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error en la consulta: " + e.getMessage());
        }
    }//GEN-LAST:event_jButton1ActionPerformed
public void mostrarDatosProductor(int opbuscar, String valor){

       DefaultTableModel tentrenador = new DefaultTableModel(
           new String[]{"codigo_producto", "descripcion", "precio", "numero_de_existencia", "stock_minimo", "id_categoria", "ruc", }, 0
       );
       tablaProducto.setModel(tentrenador);
       
             String codsql;
      if (opbuscar == 0 || valor == null || valor.trim().isEmpty()) {
    codsql = "SELECT * FROM producto";
} else if (opbuscar == 1) {
    codsql = "SELECT * FROM producto WHERE codigo_producto = '" + valor + "'";
} else if (opbuscar == 2) {
    codsql = "SELECT * FROM producto WHERE precio <= " + valor;  // sin comillas
} else if (opbuscar == 3) {
    codsql = "SELECT * FROM producto WHERE precio >= " + valor;  // sin comillas
} else {
    codsql = "SELECT * FROM producto";
}

       if (conet == null) {
           JOptionPane.showMessageDialog(null, "Error en la conexión con la base de datos");
           return;
       }

       String[] datos = new String[7];

       try {
           Statement leer = conet.createStatement();
           ResultSet resultado = leer.executeQuery(codsql);

           while (resultado.next()) {
               datos[0] = resultado.getString(1);
               datos[1] = resultado.getString(2);
               datos[2] = resultado.getString(3);
               datos[3] = resultado.getString(4);
               datos[4] = resultado.getString(5);
               datos[5] = resultado.getString(6);
               datos[6] = resultado.getString(7);
               tentrenador.addRow(datos);
           }

           tablaProducto.setModel(tentrenador);
       } catch (SQLException e) {
           JOptionPane.showMessageDialog(null, "Error en la consulta: " + e.getMessage());
       }
}
 public void actualizardatos(){
    
    int  fila  = tablaProducto.getSelectedRow();
    
      if (fila < -1) {
        JOptionPane.showMessageDialog(null, "Seleccione un producto para actualizar.");
        return;
    }
    
    int id  = Integer.parseInt(this.tablaProducto.getValueAt(fila, 0).toString());
    String des = tablaProducto.getValueAt(fila, 1).toString();
     Double pre =Double.parseDouble(this.tablaProducto.getValueAt(fila, 2).toString());
      int num  = Integer.parseInt(this.tablaProducto.getValueAt(fila, 3).toString());
      int sto  = Integer.parseInt(this.tablaProducto.getValueAt(fila, 4).toString());
      int idC  = Integer.parseInt(this.tablaProducto.getValueAt(fila, 5).toString());
      String ruc = tablaProducto.getValueAt(fila, 6).toString();
     
               
        try { 
             PreparedStatement actu  = conet.prepareStatement("update producto set descripcion = '"+des+"', precio  = '"+pre+"',  numero_de_existencia = '"+num+"', stock_minimo ='"+sto+"',  id_categoria ='"+idC+"', ruc ='"+ruc+"' where codigo_producto = '"+id+"'  ");
             actu.executeUpdate();
            mostrarDatosProductor(0, null);
               
               } catch (Exception e){
               }

    }
    public void EliminarCliente(){
      int fila = tablaProducto.getSelectedRow();
      String valor = tablaProducto.getValueAt(fila, 0).toString();
      
        try {
            PreparedStatement elimi = conet.prepareStatement("delete from producto where codigo_producto = '"+valor+"'");
                    elimi.executeUpdate();
                    mostrarDatosProductor(0, null);
        } catch (Exception e) {
        }
    }
         public void metodoIDCategoria(){
        //Llamamos a la conexion
        Connection cn = Conexion.conectar();
        String sql = "select id_categoria from categoria "
                + "where nombre_categoria = '"+cb_categoria1.getSelectedItem()+"'";
        Statement st;
        try{
             //Ejecutamos el Statement (sentencia)
            st = cn.createStatement();
            //"Conjuto de resultado" Obtenemos los datos de la BD;
            ResultSet rs = st.executeQuery(sql);
            while(rs.next()){  
                idCategoriaGlobal = rs.getInt("id_categoria");
            }
        }catch(SQLException e){
            System.out.println("Error al llamar sus ID del Entrenador"+e);
        }
     }
        public void cargarTodasLasCategorias(){
        //Llamamos a la conexion
        Connection cn = Conexion.conectar();
        String sql = "select * from categoria";
        Statement st;
        try{
            //Ejecutamos el Statement (sentencia)
            st = cn.createStatement();
            //"Conjuto de resultado" Obtenemos los datos de la BD;
            ResultSet rs = st.executeQuery(sql);
            cb_categoria1.removeAllItems(); //Elimina todos los item creados anteriormente
            cb_categoria1.addItem("Seleccione una Categoria"); //agrego un nuevo item
            //El bucle busca la siguiente fila del ResultSet mientras haya datos
            while(rs.next()){  
                //Almaceno en mi combo box categoria, todos los datos de la tabla categoria
                // pongo "descripcion" porque asi esta el atributo en mi tabla tb_categoria
                cb_categoria1.addItem(rs.getString("nombre_categoria"));
            }
        }catch(SQLException e){
            System.out.println("Error al cargar Categoria"+e);
        }
    }
 public void metodoIDRuc(){
        //Llamamos a la conexion
        Connection cn = Conexion.conectar();
        String sql = "select ruc from proveedor where nombre  = '"+cb_Prove.getSelectedItem()+"'";
        Statement st;
        try{
             //Ejecutamos el Statement (sentencia)
            st = cn.createStatement();
            //"Conjuto de resultado" Obtenemos los datos de la BD;
            ResultSet rs = st.executeQuery(sql);
            while(rs.next()){  
                idRucGlobal = rs.getString("ruc");
            }
        }catch(SQLException e){
            System.out.println("Error al llamar sus ID del Proveedor "+e);
        }
     }
        public void cargarTodosLosProveedores(){
        //Llamamos a la conexion
        Connection cn = Conexion.conectar();
        String sql = "select * from proveedor";
        Statement st;
        try{
            //Ejecutamos el Statement (sentencia)
            st = cn.createStatement();
            //"Conjuto de resultado" Obtenemos los datos de la BD;
            ResultSet rs = st.executeQuery(sql);
            cb_Prove.removeAllItems(); //Elimina todos los item creados anteriormente
            cb_Prove.addItem("Seleccione un Proveedor"); //agrego un nuevo item
            //El bucle busca la siguiente fila del ResultSet mientras haya datos
            while(rs.next()){  
                //Almaceno en mi combo box categoria, todos los datos de la tabla categoria
                // pongo "descripcion" porque asi esta el atributo en mi tabla tb_categoria
                cb_Prove.addItem(rs.getString("nombre"));
            }
        }catch(SQLException e){
            System.out.println("Error al cargar Proveedor"+e);
        }
    }
    
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        actualizardatos();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        EliminarCliente();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void tablaProductoAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_tablaProductoAncestorAdded

    }//GEN-LAST:event_tablaProductoAncestorAdded

    private void comboOpcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboOpcionActionPerformed
        int opcion  = comboOpcion.getSelectedIndex();
        String valorbuscado  = campoBuscar.getText();
        mostrarDatosProductor(opcion,valorbuscado);

    }//GEN-LAST:event_comboOpcionActionPerformed

    private void campoBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoBuscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoBuscarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        int opcion  = comboOpcion.getSelectedIndex();
        String valorbuscado  = campoBuscar.getText();
        mostrarDatosProductor(opcion,valorbuscado);
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        actualizardatos();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        EliminarCliente();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void cb_ProveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_ProveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cb_ProveActionPerformed

    private void cb_categoria1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_categoria1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cb_categoria1ActionPerformed

    private void opActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opActualizarActionPerformed

        actualizardatos();
    }//GEN-LAST:event_opActualizarActionPerformed

    private void opEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opEliminarActionPerformed
        EliminarCliente();

    }//GEN-LAST:event_opEliminarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JTextField campoBuscar;
    private javax.swing.JComboBox<String> cb_Prove;
    private javax.swing.JComboBox<String> cb_categoria1;
    private javax.swing.JComboBox<String> comboOpcion;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu menuContextual;
    private javax.swing.JMenuItem opActualizar;
    private javax.swing.JMenuItem opEliminar;
    private javax.swing.JTable tablaProducto;
    private javax.swing.JTextField txtCantidad;
    private javax.swing.JTextField txtDescripcion;
    private javax.swing.JTextField txtPrecio;
    private javax.swing.JTextField txtStock;
    // End of variables declaration//GEN-END:variables
}
